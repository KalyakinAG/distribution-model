//МодельЗапроса = Общий.МодельЗапроса(ТекстЗапроса);
//МодельЗапроса = Общий.МодельЗапроса(СхемаКомпоновкиДанных, НастройкиКомпоновкиДанных);
//МодельЗапроса = Общий.МодельЗапроса(ДинамическийСписок);
Функция МодельЗапроса(ТекстЗапроса = Неопределено, НастройкиКомпоновки = Неопределено) Экспорт
	МодельЗапроса = Обработки.МодельЗапроса.Создать();
	

	Если ТекстЗапроса = Неопределено ИЛИ ПустаяСтрока(ТекстЗапроса) Тогда
		Возврат МодельЗапроса;
	КонецЕсли;
	
	ТипЗначенияТекстаЗапроса = ТипЗнч(ТекстЗапроса);
	
	Если ТипЗначенияТекстаЗапроса = Тип("СхемаКомпоновкиДанных") Тогда
		Возврат МодельЗапроса.УстановитьСхемуКомпоновкиДанных(ТекстЗапроса, НастройкиКомпоновки);
	КонецЕсли;

	Если ТипЗначенияТекстаЗапроса = Тип("ТаблицаФормы") Тогда
		Возврат МодельЗапроса.УстановитьСхемуТаблицыСписка(ТекстЗапроса);
	КонецЕсли;
	
	Если ТипЗначенияТекстаЗапроса = Тип("ДинамическийСписок") Тогда
		Возврат МодельЗапроса.УстановитьСхемуДинамическогоСписка(ТекстЗапроса);
	КонецЕсли;
	
	Если ТипЗначенияТекстаЗапроса = Тип("Запрос") Тогда
		Возврат МодельЗапроса.УстановитьЗапрос(ТекстЗапроса);
	КонецЕсли;
	
	Если ТипЗначенияТекстаЗапроса = Тип("СхемаЗапроса") Тогда
		Если ТипЗнч(НастройкиКомпоновки) = Тип("МенеджерВременныхТаблиц") Тогда
			МодельЗапроса.УстановитьМенеджерВременныхТаблиц(НастройкиКомпоновки);
		КонецЕсли;
		Возврат МодельЗапроса.УстановитьСхемуЗапроса(ТекстЗапроса);
	КонецЕсли;
	
	Если ТипЗначенияТекстаЗапроса = Тип("МенеджерВременныхТаблиц") Тогда
		Возврат МодельЗапроса.УстановитьМенеджерВременныхТаблиц(ТекстЗапроса);
	КонецЕсли;
	
	МодельЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
	Возврат МодельЗапроса;
КонецФункции

// Модель распределения.
// 
// Параметры:
//  Основание - МенеджерВременныхТаблиц - Основание
//  Точность - Число - Точность
// 
// Возвращаемое значение:
//  ОбработкаОбъект.МодельРаспределения - Модель распределения
Функция МодельРаспределения(Основание = Неопределено, Точность = 2) Экспорт
	МодельРаспределения = Обработки.МодельРаспределения.Создать();
	Если ТипЗнч(Основание) = Тип("МенеджерВременныхТаблиц") Тогда
		МодельРаспределения.УстановитьМенеджерВременныхТаблиц(Основание);
	КонецЕсли;
	МодельРаспределения.Точность(Точность);
	Возврат МодельРаспределения;
КонецФункции

Процедура СоздатьКолонки(Коллекция, Колонки)
	ТипЗначения = ТипЗнч(Колонки);
	Если ТипЗначения = Тип("Строка") ИЛИ ТипЗначения = Тип("Массив") Тогда
		Для каждого Колонка Из ОбщийКлиентСервер.Массив(Колонки) Цикл
			Коллекция.Колонки.Добавить(Колонка);
		КонецЦикла;
	ИначеЕсли ТипЗначения = Тип("Структура") Тогда
		Для каждого Колонка Из Колонки Цикл
			ИмяКолонки 	= Колонка.Ключ;
			Значение 	= Колонка.Значение;
			Если Значение = Неопределено Тогда
				Коллекция.Колонки.Добавить(Колонка.Ключ);
			Иначе
				ТипЗначения = Колонка.Значение;
				Если ТипЗнч(ТипЗначения) <> Тип("ОписаниеТипов") Тогда
					ТипЗначения = Новый ОписаниеТипов(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ТипЗнч(ТипЗначения)));
				КонецЕсли;
				Коллекция.Колонки.Добавить(Колонка.Ключ, ТипЗначения);
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ТипЗнч(Колонки) = Тип("КоллекцияОбъектовМетаданных") Тогда
		Для каждого Колонка Из Колонки Цикл
			Коллекция.Колонки.Добавить(Колонка.Имя, Колонка.Тип);
		КонецЦикла;
	Иначе 
		Для каждого Колонка Из Колонки Цикл
			ТипЗначения = Новый ОписаниеТипов(Колонка.ТипЗначения,, "Null");
			Коллекция.Колонки.Добавить(Колонка.Имя, ТипЗначения);
		КонецЦикла;		
	КонецЕсли; 
КонецПроцедуры

// Создает таблицу значений на основании информации о колонках.
// 
// Параметры:
// Колонки 	- Структура - {Имя, ОписаниеТипа}|{Имя, ТипЗнч(Значение)}
// 			- КоллекцияКолонокТаблицыЗначений, КоллекцияКолонокДереваЗначений, КоллекцияКолонокРезультатаЗапроса
// 			- Строка
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Таблица значений
Функция ТаблицаЗначений(Колонки) Экспорт 
	Таблица 	= Новый ТаблицаЗначений;
	СоздатьКолонки(Таблица, Колонки);
	Возврат Таблица;
КонецФункции

